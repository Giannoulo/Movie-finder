{"version":3,"sources":["Components/Header/Header.js","Redux/Actions/types.js","Data/imdb_top_1000.csv","Components/Card/MovieTile.js","Components/Card/MovieFileFunctions.js","Components/Card/Card.js","Redux/Actions/movieListActions.js","App.js","reportWebVitals.js","Redux/Reducers/movieListReducer.js","Redux/Reducers/index.js","store.js","index.js"],"names":["Header","className","id","icon","faFilm","POPULATE_MOVIE_LIST","ADD_MOVIE_ID","CARD_NUMBER","PLAY_FINDER","MovieTile","props","onClick","increaseCardNumber","src","movie","alt","getMovieTiles","movieList","newMovieList","movieIds","foundMovie","length","movieId","Math","floor","random","includes","push","find","toString","getNewMovies","map","newMovie","mapDispatchToProps","populateMovieList","type","payload","playFinderFunction","connect","state","pickedMovieList","movies","playFinder","cardNumber","useEffect","Papa","parse","movielist","download","complete","results","console","log","data","shift","read_csv","useState","movieTiles","setmovieTiles","renderMovieTiles","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","movieListReducer","action","combineReducers","middleware","thunk","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e05a8b02.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilm } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Header() {\n    return (\n        <div className=\"row align-items-center\" id=\"header-row\">\n            <div className=\"col\" id=\"header-col\">\n                <FontAwesomeIcon icon={faFilm} id=\"header-icon\"/>Movie Finder</div>\n        </div>\n    )\n}\nexport default Header;","/*\n ** types.js\n ** A list of resuable types to use througout the actions\n */\nexport const POPULATE_MOVIE_LIST = \"POPULATE_MOVIE_LIST\";\nexport const ADD_MOVIE_ID = \"ADD_MOVIE_ID\";\nexport const CARD_NUMBER = \"CARD_NUMBER\";\n\nexport const PLAY_FINDER = \"PLAY_FINDER\";\n","export default __webpack_public_path__ + \"static/media/imdb_top_1000.e12a5ba6.csv\";","import React from \"react\";\n\nconst MovieTile = (props) => {\n  return (\n    <div onClick={() => props.increaseCardNumber()} className=\"movie-tile\">\n      <img src={props.movie[0]} alt={props.movie[1]} className=\"movie-tile-img\" />\n      <div>{props.movie[1]}</div>\n    </div>\n  );\n};\nexport default MovieTile;\n","import Papa from \"papaparse\";\nimport movielist from \"../../Data/imdb_top_1000.csv\";\nimport MovieTile from \"./MovieTile\";\n\nexport const read_csv = (props) => {\n  // Load the 1000 movie list from the csv file to the redux state\n  Papa.parse(movielist, {\n    download: true,\n    complete: function (results) {\n      console.log(\"Parsing complete:\", results.data);\n      results.data.shift();\n      props.populateMovieList(results.data);\n    },\n  });\n};\n\nconst getNewMovies = (movieList) => {\n  // Return an array of 3 random movies from the 1000 list\n  let movieIds = [];\n  let newMovieList = [];\n  let foundMovie = null;\n  // Get 3 random int numbers between 0-1000\n  while (movieIds.length <= 2) {\n    let movieId = Math.floor(Math.random() * 1000);\n    if (!movieIds.includes(movieId)) {\n      movieIds.push(movieId);\n    }\n  }\n  // Get the movies that correspond to the 3 random numbers\n  for (let movieId of movieIds) {\n    foundMovie = movieList.find((movie) => movie[5] === movieId.toString());\n    newMovieList.push(foundMovie);\n  }\n  return newMovieList;\n};\n\nexport const getMovieTiles = (movieList, increaseCardNumber) => {\n  let newMovieList = getNewMovies(movieList);\n  return (\n    <>\n      {newMovieList.map((newMovie) => (\n        <div className=\"col\" key={newMovie[5]}>\n          <MovieTile movie={newMovie} increaseCardNumber={increaseCardNumber} />\n        </div>\n      ))}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  populateMovieList,\n  playFinderFunction,\n  increaseCardNumber,\n} from \"../../Redux/Actions/movieListActions\";\nimport { read_csv, getMovieTiles } from \"./MovieFileFunctions\";\n\nconst Card = (props) => {\n  // Load the movie list on Redux on first render\n  useEffect(() => {\n    if (props.movieList === null) {\n      read_csv(props);\n    }\n  });\n\n  // Keep updated Movie Tiles\n  const [movieTiles, setmovieTiles] = useState(\"\");\n  const renderMovieTiles = () => {\n    if (!props.playFinder) {\n      props.playFinderFunction();\n    }\n    setmovieTiles(getMovieTiles(props.movieList, props.increaseCardNumber));\n  };\n\n  // Re Render MovieTiles\n  useEffect(() => {\n    if (props.cardNumber > 0) {\n      renderMovieTiles();\n    }\n  }, [props.cardNumber]); // TODO fix eslint warning\n\n  return (\n    <div className=\"row justify-content-center\" id=\"card-row\">\n      <div className=\"col\" id=\"card-col\">\n        <h2 id=\"card-title\">Choose your preferred movie!</h2>\n        <div className=\"row\">\n          {props.playFinder ? (\n            movieTiles\n          ) : (\n            <div className=\"col\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                id=\"play-button\"\n                onClick={() => renderMovieTiles()}\n              >\n                Play\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  pickedMovieList: state.movies.pickedMovieList,\n  movieList: state.movies.movieList,\n  playFinder: state.movies.playFinder,\n  cardNumber: state.movies.cardNumber,\n});\n\nconst mapDispatchToProps = { populateMovieList, playFinderFunction, increaseCardNumber };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { ADD_MOVIE_ID, POPULATE_MOVIE_LIST, PLAY_FINDER, CARD_NUMBER } from \"./types\";\n\n/*\n ** movieListActions.js\n ** Controls actions around the picked movie list used in the application.\n */\n\nexport const populateMovieList = (movieList) => {\n  return {\n    type: POPULATE_MOVIE_LIST,\n    payload: movieList,\n  };\n};\n\nexport const addMovieId = () => {\n  return {\n    type: ADD_MOVIE_ID,\n  };\n};\n\nexport const playFinderFunction = () => {\n  return {\n    type: PLAY_FINDER,\n  };\n};\n\nexport const increaseCardNumber = () => {\n  return {\n    type: CARD_NUMBER,\n  };\n};\n","import Header from \"./Components/Header/Header\";\nimport Card from \"./Components/Card/Card\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\" id=\"app-container\">\n      <Header/>\n      <Card/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ADD_MOVIE_ID,\n  POPULATE_MOVIE_LIST,\n  PLAY_FINDER,\n  CARD_NUMBER,\n} from \"../../Redux/Actions/types\";\n\n/*\n ** loginReducer.js\n ** Returns login state based on actions provided\n */\n\nconst initialState = {\n  movieList: null,\n  pickedMovieList: [\"Fwe\", \"Feggdeg\", \"Vieo\", \"Kiko\"],\n  playFinder: false,\n  cardNumber: 0,\n};\n\nconst movieListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MOVIE_ID:\n      return {\n        ...state,\n        pickedMovieList: action.payload,\n      };\n    case POPULATE_MOVIE_LIST:\n      return {\n        ...state,\n        movieList: action.payload,\n      };\n    case PLAY_FINDER:\n      return {\n        ...state,\n        playFinder: true,\n      };\n    case CARD_NUMBER:\n      return {\n        ...state,\n        cardNumber: state.cardNumber + 1,\n      };\n    default:\n      return state;\n  }\n};\nexport default movieListReducer;\n","import { combineReducers } from \"redux\";\nimport movieListReducer from \"./movieListReducer\";\n\n/*\n** index.js\n** combinereducers is used when multiple reducers are present\n*/\n\nexport default combineReducers({\n  movies:movieListReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Redux/Reducers\";\n\n/*\n** Store.js\n** Store holds the whole state tree of your application. \n*/\n\nexport const middleware = [thunk];\n\nlet store;\n\nif (\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n) {\n  store = createStore(\n    rootReducer,\n    // compose is used when multiple enhancers are present\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(rootReducer, compose(applyMiddleware(...middleware)));\n}\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport './SCSS/main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport { Provider } from \"react-redux\";\nimport store from \"../src/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}